{
  "name": "real-estate-erp-deployment",
  "version": "1.0.0",
  "description": "Deployment package for Real Estate ERP System",
  "scripts": {
    "install:all": "npm run install:backend && npm run install:frontend",
    "install:backend": "bash deploy/install.sh",
    "install:windows": "deploy\\install.bat",
    "install:frontend": "npm install && npm run build",
    "start:dev": "concurrently \"npm run start:backend:dev\" \"npm run start:frontend:dev\"",
    "start:backend:dev": "cd .. && source venv/bin/activate && uvicorn simple_app:app --host 0.0.0.0 --port 8000 --reload",
    "start:frontend:dev": "cd .. && npm start",
    "start:prod": "concurrently \"npm run start:backend:prod\" \"npm run start:frontend:prod\"",
    "start:backend:prod": "cd .. && source venv/bin/activate && uvicorn simple_app:app --host 0.0.0.0 --port 8000 --workers 4",
    "start:frontend:prod": "cd .. && npx serve -s build -l 3000",
    "build:all": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd .. && source venv/bin/activate && pip install -r requirements_simple.txt",
    "build:frontend": "cd .. && npm run build",
    "test:all": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd .. && source venv/bin/activate && python -m pytest",
    "test:frontend": "cd .. && npm test",
    "deploy:docker": "docker-compose -f docker-compose.prod.yml up -d --build",
    "deploy:docker:stop": "docker-compose -f docker-compose.prod.yml down",
    "deploy:docker:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "deploy:systemd": "sudo systemctl enable realestate-backend && sudo systemctl enable realestate-frontend && sudo systemctl start realestate-backend && sudo systemctl start realestate-frontend",
    "deploy:systemd:stop": "sudo systemctl stop realestate-backend && sudo systemctl stop realestate-frontend",
    "deploy:systemd:status": "sudo systemctl status realestate-backend && sudo systemctl status realestate-frontend",
    "clean": "cd .. && rm -rf venv node_modules build .env",
    "clean:docker": "docker-compose -f docker-compose.prod.yml down -v && docker system prune -f",
    "setup:env": "cd .. && python -c \"import secrets; print('SECRET_KEY=' + secrets.token_urlsafe(32))\" > .env.tmp && echo 'DATABASE_URL=sqlite:///./realestate.db' >> .env.tmp && echo 'ENVIRONMENT=production' >> .env.tmp && echo 'ALLOWED_HOSTS=localhost,127.0.0.1' >> .env.tmp && echo 'CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000' >> .env.tmp && mv .env.tmp .env",
    "health:check": "curl -f http://localhost:8000/health && echo 'Backend OK' && curl -f http://localhost:3000 && echo 'Frontend OK'",
    "logs:backend": "cd .. && tail -f /var/log/realestate-backend.log 2>/dev/null || echo 'Backend logs not available'",
    "logs:frontend": "cd .. && tail -f /var/log/nginx/access.log 2>/dev/null || echo 'Frontend logs not available'",
    "backup:db": "cd .. && cp realestate.db backup_$(date +%Y%m%d_%H%M%S).db",
    "restore:db": "cd .. && ls -la backup_*.db | tail -1 | awk '{print $9}' | xargs -I {} cp {} realestate.db",
    "update:all": "npm run update:backend && npm run update:frontend",
    "update:backend": "cd .. && source venv/bin/activate && pip install --upgrade -r requirements_simple.txt",
    "update:frontend": "cd .. && npm update",
    "monitor:resources": "echo 'CPU Usage:' && top -l 1 | grep 'CPU usage' && echo 'Memory Usage:' && top -l 1 | grep 'PhysMem' && echo 'Disk Usage:' && df -h .",
    "security:check": "echo 'Checking for common security issues...' && cd .. && find . -name '*.py' -exec grep -l 'password.*=.*['\''\"]' {} \\; 2>/dev/null || echo 'No hardcoded passwords found'"
  },
  "keywords": [
    "real-estate",
    "erp",
    "deployment",
    "automation",
    "fastapi",
    "react",
    "docker"
  ],
  "author": "Real Estate ERP Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "your-repository-url-here"
  },
  "bugs": {
    "url": "your-issues-url-here"
  },
  "homepage": "your-homepage-url-here"
}
